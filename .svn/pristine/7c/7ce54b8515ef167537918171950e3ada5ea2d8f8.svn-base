<?php
namespace app\index\controller;
use think\Db;
use think\Session;
use think\Request;
use think\Cookie;
use think\Captcha;
class Wx
{

//获取用户登陆信息
    public function getopenid(){
    		$appid = 'wx82fd8a5ab014c63c';
	 		$secret = '972b7ca42c685331a6b66668f3a229f3';
	    	$res = $this->postget();
	    	$code = $res['code'];
    

            $url = 'https://api.weixin.qq.com/sns/jscode2session?appid='.$appid.'&secret='.$secret.'&js_code='.$code.'&grant_type=authorization_code';
            $res = $this->curlget($url);
            $resdata = json_decode($res,true);
            
 

            $key = $resdata['session_key'];
           
            $privateKey = "1234567812345678";
            $iv     = "1234898223454332";
            $openid = $resdata['openid'];
           
            //加密
            $encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privateKey, $openid, MCRYPT_MODE_CBC, $iv);
            $openid = base64_encode($encrypted);
           
            $encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privateKey, $key, MCRYPT_MODE_CBC, $iv);
            $key = base64_encode($encrypted);
        
            
            $okey = $openid.$key;
            //Session::get('session_key',$okey,300);
            $arr = [
                    'data'=>$okey,
                    'err_code'=>'000',
                    'err_msg'=>'请求成功'
            ];
            
            echo json_encode($arr);
     
    }


    //获取用户信息存入数据库
    public function getuser(){
 			    $res = $this->postget();
               
                $session_key = $this->gettocken();
         
                $encryptedData = $res['userinfo']['encryptedData'];
                $iv = $res['userinfo']['iv'];
                $rawdata = $res['userinfo']['rawData'];
                //dump($this->gettocken());
  
            //解密
            $openid = $this->getoid();
         
            //$unionid = $this->getunionid();
        
             $user=[               
                    'img'=>$res['userinfo']["userInfo"]['avatarUrl'],
                    'openid'=>$openid,
                    'name'=>$res['userinfo']["userInfo"]['nickName'],
                      'create_time'=>date('Y-m-d H:i:s')     
                    ];
        


            $status = Db::name('user')->where('openid',$openid)->find();


            if($status){//存在openid
     
            }else{//不存在openid
            	
             Db::name('user')->where('openid',$openid)->insert($user);
                
            }

             $arr = [
                    'data'=>'',
                    'err_code'=>'000',
                    'err_msg'=>'请求成功'
                     ];     
                    echo json_encode($arr);

    }
    //首页
    public function xindex(){
        $res = $this->postget(); 
        $session = $res['session']; 
        $openid = $this->getoid();      
        $user= Db::name('user')->where('openid',$openid)->find();
        $id = $user['id'];
        $nowtime = date('Y-m-d');
        $ss['name'] = ['<=',$nowtime];
        $data =   Db::name('image')->where($ss)->order('name desc')->limit(30)->select();

        $data = array_reverse($data);
        foreach ($data as $key => $value) {
                
               $collect =  Db::name('collect')->where('img_id',$value['id'])->where('user_id',$id)->find();

               if($collect){
                $data[$key]['collect_status'] = '1';
               }else{
                $data[$key]['collect_status'] = '0';
               }

        }
       $sign =  Db::name('sign')->where('user_id',$id)->where('datetime',$nowtime)->find();
        if($sign){
            $sign_status = '1';
        }else{
            $sign_status = '0';
        }
               
                    $arr = [
                            'data'=>['list'=>$data,'sign_status'=>$sign_status],
                            'err_code'=>'000',
                            'err_msg'=>'请求成功'
                     ];     
                      // $data = array_reverse($data);
                      //   halt($data);
                    echo json_encode($arr);
       


        }




    //签到接口sign
    public function sign(){
			$res = $this->postget(); 
			$session = $res['session']; 


			$openid = $this->getoid();
            $user= Db::name('user')->where('openid',$openid)->find();
			$id = $user['id'];
            $nowtime = date('Y-m-d');
            //签到
            $datas = [
                'user_id'=>$id,
                'datetime'=>$nowtime,
                'create_time'=>date('Y-m-d H:i:s')
            ];
            //加积分
            $point = [
                'user_id'=>$id,
                'datetime'=>$nowtime,
                'point'=>1,
                'title'=>'签到积分',
                'create_time'=>date('Y-m-d H:i:s')
            ];
            $signs = Db::name('sign')->insert($datas);
            if($signs){
                $points = Db::name('point')->insert($point);
                if($points){
                        $arr = [
                        'data'=>'',
                        'err_code'=>'000',
                        'err_msg'=>'请求成功'
                        ];     
                        echo json_encode($arr);
                }else{
                        $arr = [
                        'data'=>'',
                        'err_code'=>'002',
                        'err_msg'=>'请求失败'
                        ];     
                        echo json_encode($arr);
                }
            }else{
                        $arr = [
                        'data'=>'',
                        'err_code'=>'002',
                        'err_msg'=>'请求失败'
                        ];     
                        echo json_encode($arr);
                        }

    }

    //收藏接口collect
    public function collect(){
			$res = $this->postget(); 
			$session = $res['session'];    
			$openid = $this->getoid();
            $user= Db::name('user')->where('openid',$openid)->find();
            $id = $user['id'];
            $img_id = $res['id'];

            $data=[
                'user_id'=>$id,
                'img_id'=>$res['id'],
                'create_time'=>date('Y-m-d H:i:s')
            ];
		  
            //首先判断用户有没有收藏
           $status = Db::name('collect')->where('user_id',$id)->where('img_id',$img_id)->find();

           if($status){
        
               $ss =  Db::name('collect')->where('id',$status['id'])->delete();
          
               if($ss){
                      $arr = [
                        'data'=>'',
                        'err_code'=>'000',
                        'err_msg'=>'取消成功'
                        ];     
                        echo json_encode($arr);
               }else{
                    $arr = [
                        'data'=>'',
                        'err_code'=>'002',
                        'err_msg'=>'请求失败'
                        ];     
                        echo json_encode($arr);
               }
           }else{
           
               $collect =  Db::name('collect')->insert($data);
                 if($collect){
                        $arr = [
                        'data'=>'',
                        'err_code'=>'000',
                        'err_msg'=>'添加成功'
                        ];     
                        echo json_encode($arr);
            }else{
                        $arr = [
                        'data'=>'',
                        'err_code'=>'002',
                        'err_msg'=>'请求失败'
                        ];     
                        echo json_encode($arr);
            }
           }
        
          
    }


    //个人中心 我的信息my
    public function my(){

            $res = $this->postget(); 
            $session = $res['session'];    
            $openid = $this->getoid();
            $user= Db::name('user')->where('openid',$openid)->find();

            $arr = [
            'data'=>$user,
            'err_code'=>'000',
            'err_msg'=>'请求成功'
            ];     
            echo json_encode($arr);



    }
        //个人中心 我的收藏mycollect
    public function mycollect(){

            $res = $this->postget(); 
            $session = $res['session'];    
            $openid = $this->getoid();
            $user= Db::name('user')->where('openid',$openid)->find();
            $id = $user['id'];

            $collect = Db::view('collect','*')
            ->view('image','url,name','image.id = collect.img_id')
            ->where('user_id',$id)
            ->order('name desc')
            ->select();
            $arr = [
            'data'=>$collect,
            'err_code'=>'000',
            'err_msg'=>'请求成功'
            ];     
            echo json_encode($arr);



    }
        //个人中心 我的积分mypoint
    public function mypoint(){

            $res = $this->postget(); 
            $session = $res['session'];    
            $openid = $this->getoid();
            $user= Db::name('user')->where('openid',$openid)->find();
            $id = $user['id'];
            $point = Db::name('point')->where('user_id',$id)->order('create_time desc')->select();
            $points = '';
            foreach ($point as $key => $value) {
               $points += $value['point'];
            }
            $arr = [
            'data'=>['list'=>$point,'points'=>$points],
            'err_code'=>'000',
            'err_msg'=>'请求成功'
            ];     
            echo json_encode($arr);


    }

















	/**
 * GET方式获取远程url数据
 * @param $url 远程地址
 * @param $data GET数据
 * @return url返回数据
 */
function curlget($url,$data=""){
    $ch=curl_init();
    $header[]="Accept-Charset: utf-8";
    curl_setopt($ch,CURLOPT_URL,$url);
    curl_setopt($ch,CURLOPT_CUSTOMREQUEST,"GET");
    curl_setopt($ch,CURLOPT_TIMEOUT,500);
    curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,FALSE);
    curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,FALSE);
    curl_setopt($ch,CURLOPT_HTTPHEADER,$header);
    curl_setopt($ch,CURLOPT_USERAGENT,'Mozilla/5.0 (compatible; MSIE 5.01;Window NT 5.0)');
    curl_setopt($ch,CURLOPT_FOLLOWLOCATION,1);
    curl_setopt($ch,CURLOPT_AUTOREFERER,1);
    curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
    curl_setopt($ch, CURLOPT_HEADER,0);
    $temp=curl_exec($ch);
    curl_close($ch);
    return $temp;
}

   //获取小程序发送数据
    public function postget(){
        $res = json_decode(file_get_contents("php://input"),true);
        return $res;
    }

 public function gettocken(){
            $res = $this->postget(); 
            $session = $res['session']; 

            $tocken=substr($session , 44 , 44);
            //解密
            $encryptedData = base64_decode($tocken);
            $privateKey = "1234567812345678";
            $iv     = "1234898223454332";
            $tocken = mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $privateKey, $encryptedData, MCRYPT_MODE_CBC, $iv);
            return trim($tocken);
 }

public function getoid(){
            $res = $this->postget(); 
            $session = $res['session']; 

            $openid=substr($session , 0 , 44);
            //解密
            $encryptedData = base64_decode($openid);
            $privateKey = "1234567812345678";
            $iv     = "1234898223454332";
            $openid = mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $privateKey, $encryptedData, MCRYPT_MODE_CBC, $iv);
            return trim($openid);
    }





}